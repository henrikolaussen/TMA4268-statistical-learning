knitr::opts_chunk$set(echo = TRUE)
library(ISLR)
library(GGally)
library(ggplot2)
ggpairs(subset(Credit, select = -c(ID,Gender, Student, Married, Ethnicity))) + theme_minimal()
library(leaps)
credit.data <- subset(Credit, select = -ID)
#using 75% as training and 25% as test
set.seed(1)
train_index <- sample(1:nrow(credit.data), nrow(credit.data)*0.75)
credit.data.training <- credit.data[train_index,]
credit.data.test <- credit.data[-train_index,]
best.sub.select <- regsubsets(Balance ~., data = credit.data.training) #all predictors except ID
r2adj <- summary(best.sub.select)$adjr2
cp <- summary(best.sub.select)$cp
bic <- summary(best.sub.select)$bic
rss <- summary(best.sub.select)$rss
par(mfrow=c(2,2))
plot(rss, type = 'l', xlab = "number of variables")
rss.min <- which.min(rss)
points(rss.min, rss[rss.min], col = 'red')
plot(cp, type = 'l', xlab = "number of variables")
cp.min <- which.min(cp)
points(cp.min, cp[cp.min], col = 'red')
plot(r2adj, type = 'l', xlab = "number of variables")
r2adj.max <- which.max(r2adj)
points(r2adj.max, r2adj[r2adj.max], col = 'red')
plot(bic, type = 'l', xlab = "number of variables")
bic.min <- which.min(bic)
points(bic.min, bic[bic.min], col = 'red')
predict.regsubsets=function(object,newdata,id,...){
form=as.formula(object$call[[2]])
mat=model.matrix(form,newdata)
coefi=coef(object,id=id)
xvars=names(coefi)
mat[,xvars]%*%coefi
}
num.predictors <- 10 #number of predictors we have in model to start with.
k <- 10
n.training <- nrow(credit.data.training)
set.seed(1)
folds <- sample(rep(1:k, length = n.training), replace = T) #list of length n, with numbers between 1 and k = 10. We assign one of each observation to one of the folds 1..10
cv.errors <- matrix(NA, k, num.predictors) #each row indicates a fold, and column inidicates a predictor
for (j in 1:k) {
best.fit <- regsubsets(Balance ~., data = credit.data.training[folds != j, ], nvmax = num.predictors) #all rows (observations) that do not equal j (that is not in the j'th fold)
for (i in 1:num.predictors) {
pred <- predict(best.fit, credit.data.training[folds == j, ], id = i) #here we make predictions for the observations in the current fold j, id-> each          subset size i
cv.errors[j,i] <- mean((credit.data.training$Balance[folds == j] - pred)^2) #calculate the mean of the error of the predicted model
}
}
#we want the smallest average error over all the folds for each predictor. Â¨
mse.cv <- apply(cv.errors, 2, mean) #2 indicates that we calculate mean by column, 1 means by row
plot(mse.cv, pch = num.predictors, type = 'b', xlab = 'number of predictors')
optimal_num_pred <- which.min(rmse.cv)
